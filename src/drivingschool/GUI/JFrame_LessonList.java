/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package drivingschool.GUI;

import java.io.IOException;
import drivingschool.entity.Lesson;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import drivingschool.repo.LessonRepo;

/**
 *
 * @author btyo
 */
public class JFrame_LessonList extends javax.swing.JFrame {

    /**
     * Creates new form JFrame_StudentList
     */
    public JFrame_LessonList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        lessonsList = new javax.swing.JList<>();
        editBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select and Double Click The Row To Edit");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lessonsList.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        lessonsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lessonsList.setName("jList_Students"); // NOI18N
        jScrollPane2.setViewportView(lessonsList);

        editBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editBtn.setLabel("Edit Student");
        editBtn.setName("jButton_AddStudent"); // NOI18N
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        deleteBtn.setInheritsPopupMenu(true);
        deleteBtn.setLabel("Delete Student");
        deleteBtn.setName("jButton_DeleteStudent"); // NOI18N
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(102, 0, 0));
        jLabel1.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("jLabel1");
        jLabel1.setName("jLabel_Captions"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(editBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteBtn)
                        .addGap(0, 200, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBtn)
                    .addComponent(deleteBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        refresh_LessonList();
    }//GEN-LAST:event_formWindowActivated

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        int sel = lessonsList.getSelectedIndex();
        if (sel >= 0) {
            Lesson lesson;
            lesson = (Lesson) LessonRepo.lessons.get(sel);
            JFrame_LessonAdd ls = new JFrame_LessonAdd();
            ls.isEdit = true;
            ls.st_row = sel;
            ls.show();
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int sel = lessonsList.getSelectedIndex();
        if (sel >= 0) {
            LessonRepo.lessons.remove(sel);
            refresh_LessonList();
            JOptionPane.showMessageDialog(null, "Selected Lesson has been deleted Successfully");
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_LessonList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_LessonList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_LessonList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_LessonList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_LessonList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lessonsList;
    // End of variables declaration//GEN-END:variables

    public String fixedLengthString(String str, int flength) {
        String tstr = "";
        for (int i = 0; i < (flength - str.length()); i++) {
            tstr += " ";
        }
        tstr += str;
        return tstr;
    }

    public void refresh_LessonList() {
        List lessons = LessonRepo.lessons;
        if (lessons == null) {
            try {
                LessonRepo.retrieveLessons();
                lessons = LessonRepo.lessons;
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(JFrame_LessonList.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        Lesson lesson;
        String cp;
        lessonsList.removeAll();

        String[] arr_students = new String[lessons.size()];
        cp = "";
        cp += fixedLengthString("ID", 10) + "|"
                + fixedLengthString("Package ID", 15) + "|"
                + fixedLengthString("Student ID", 15) + "|"
                + fixedLengthString("Lesson No", 15) + "|"
                + fixedLengthString("Lesson date", 15) + "|"
                + fixedLengthString("Start time", 15) + "|"
                + fixedLengthString("End time", 15) + "|"
                + fixedLengthString("Grade", 15);
        jLabel1.setText(cp);

        for (int i = 0; i < lessons.size(); i++) {
            lesson = (Lesson) lessons.get(i);
            arr_students[i] = fixedLengthString(lesson.getID().trim(), 10) + "|"
                    + fixedLengthString(lesson.getPackageID().trim(), 15) + "|"
                    + fixedLengthString(lesson.getStudentID().trim(), 15) + "|"
                    + fixedLengthString(String.valueOf(lesson.getLessonNo()), 15) + "|"
                    + fixedLengthString(lesson.getLessonDate().toString(), 15) + "|"
                    + fixedLengthString(lesson.getStartTime().trim(), 15) + "|"
                    + fixedLengthString(lesson.getEndTime().trim(), 15) + "|"
                    + fixedLengthString(Float.toString(lesson.getGrade()), 15);
        }
        lessonsList.setListData(arr_students);
    }
}
